{"ast":null,"code":"import _slicedToArray from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n  return Boolean(!easing || typeof easing === \"string\" && easing in supportedWaapiEasing || isBezierDefinition(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));\n}\n\nvar cubicBezierAsString = function cubicBezierAsString(_ref) {\n  var _ref2 = _slicedToArray(_ref, 4),\n      a = _ref2[0],\n      b = _ref2[1],\n      c = _ref2[2],\n      d = _ref2[3];\n\n  return \"cubic-bezier(\".concat(a, \", \").concat(b, \", \").concat(c, \", \").concat(d, \")\");\n};\n\nvar supportedWaapiEasing = {\n  linear: \"linear\",\n  ease: \"ease\",\n  easeIn: \"ease-in\",\n  easeOut: \"ease-out\",\n  easeInOut: \"ease-in-out\",\n  circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n  circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n  backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n  backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])\n};\n\nfunction mapEasingToNativeEasingWithDefault(easing) {\n  return mapEasingToNativeEasing(easing) || supportedWaapiEasing.easeOut;\n}\n\nfunction mapEasingToNativeEasing(easing) {\n  if (!easing) {\n    return undefined;\n  } else if (isBezierDefinition(easing)) {\n    return cubicBezierAsString(easing);\n  } else if (Array.isArray(easing)) {\n    return easing.map(mapEasingToNativeEasingWithDefault);\n  } else {\n    return supportedWaapiEasing[easing];\n  }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };","map":null,"metadata":{},"sourceType":"module"}