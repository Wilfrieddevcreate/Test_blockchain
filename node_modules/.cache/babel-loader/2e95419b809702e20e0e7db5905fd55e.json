{"ast":null,"code":"import _defineProperty from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 0 : _ref$delay,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 300 : _ref$duration,\n      _ref$repeat = _ref.repeat,\n      repeat = _ref$repeat === void 0 ? 0 : _ref$repeat,\n      _ref$repeatType = _ref.repeatType,\n      repeatType = _ref$repeatType === void 0 ? \"loop\" : _ref$repeatType,\n      ease = _ref.ease,\n      times = _ref.times;\n\n  var keyframeOptions = _defineProperty({}, valueName, keyframes);\n\n  if (times) keyframeOptions.offset = times;\n  var easing = mapEasingToNativeEasing(ease);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n\n  if (Array.isArray(easing)) keyframeOptions.easing = easing;\n  return element.animate(keyframeOptions, {\n    delay: delay,\n    duration: duration,\n    easing: !Array.isArray(easing) ? easing : \"linear\",\n    fill: \"both\",\n    iterations: repeat + 1,\n    direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\"\n  });\n}\n\nexport { animateStyle };","map":null,"metadata":{},"sourceType":"module"}