{"ast":null,"code":"import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nfunction useAnimationFrame(callback) {\n  var initialTimestamp = useRef(0);\n\n  var _useContext = useContext(MotionConfigContext),\n      isStatic = _useContext.isStatic;\n\n  useEffect(function () {\n    if (isStatic) return;\n\n    var provideTimeSinceStart = function provideTimeSinceStart(_ref) {\n      var timestamp = _ref.timestamp,\n          delta = _ref.delta;\n      if (!initialTimestamp.current) initialTimestamp.current = timestamp;\n      callback(timestamp - initialTimestamp.current, delta);\n    };\n\n    frame.update(provideTimeSinceStart, true);\n    return function () {\n      return cancelFrame(provideTimeSinceStart);\n    };\n  }, [callback]);\n}\n\nexport { useAnimationFrame };","map":null,"metadata":{},"sourceType":"module"}