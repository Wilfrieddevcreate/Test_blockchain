{"ast":null,"code":"import _classCallCheck from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { MotionValue } from '../index.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nvar WillChangeMotionValue = /*#__PURE__*/function (_MotionValue) {\n  _inherits(WillChangeMotionValue, _MotionValue);\n\n  var _super = _createSuper(WillChangeMotionValue);\n\n  function WillChangeMotionValue() {\n    var _this;\n\n    _classCallCheck(this, WillChangeMotionValue);\n\n    _this = _super.apply(this, arguments);\n    _this.members = [];\n    _this.transforms = new Set();\n    return _this;\n  }\n\n  _createClass(WillChangeMotionValue, [{\n    key: \"add\",\n    value: function add(name) {\n      var memberName;\n\n      if (transformProps.has(name)) {\n        this.transforms.add(name);\n        memberName = \"transform\";\n      } else if (!name.startsWith(\"origin\") && !isCSSVariableName(name) && name !== \"willChange\") {\n        memberName = camelToDash(name);\n      }\n\n      if (memberName) {\n        addUniqueItem(this.members, memberName);\n        this.update();\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(name) {\n      if (transformProps.has(name)) {\n        this.transforms.delete(name);\n\n        if (!this.transforms.size) {\n          removeItem(this.members, \"transform\");\n        }\n      } else {\n        removeItem(this.members, camelToDash(name));\n      }\n\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.set(this.members.length ? this.members.join(\", \") : \"auto\");\n    }\n  }]);\n\n  return WillChangeMotionValue;\n}(MotionValue);\n\nfunction useWillChange() {\n  return useConstant(function () {\n    return new WillChangeMotionValue(\"auto\");\n  });\n}\n\nexport { WillChangeMotionValue, useWillChange };","map":null,"metadata":{},"sourceType":"module"}