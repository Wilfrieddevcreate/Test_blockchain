{"ast":null,"code":"'use strict';\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\n\nfunction throttle(fn, freq) {\n  var timestamp = 0;\n  var threshold = 1000 / freq;\n  var timer = null;\n  return function throttled() {\n    var _arguments = arguments;\n    var force = this === true;\n    var now = Date.now();\n\n    if (force || now - timestamp > threshold) {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n\n      timestamp = now;\n      return fn.apply(null, arguments);\n    }\n\n    if (!timer) {\n      timer = setTimeout(function () {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, _arguments);\n      }, threshold - (now - timestamp));\n    }\n  };\n}\n\nexport default throttle;","map":null,"metadata":{},"sourceType":"module"}