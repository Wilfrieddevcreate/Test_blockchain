{"ast":null,"code":"import _classCallCheck from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/wilfr/OneDrive/Documents/maxitapbotlatestversionv2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { scrapeMotionValuesFromProps as _scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nvar SVGVisualElement = /*#__PURE__*/function (_DOMVisualElement) {\n  _inherits(SVGVisualElement, _DOMVisualElement);\n\n  var _super = _createSuper(SVGVisualElement);\n\n  function SVGVisualElement() {\n    var _this;\n\n    _classCallCheck(this, SVGVisualElement);\n\n    _this = _super.apply(this, arguments);\n    _this.type = \"svg\";\n    _this.isSVGTag = false;\n    return _this;\n  }\n\n  _createClass(SVGVisualElement, [{\n    key: \"getBaseTargetFromProps\",\n    value: function getBaseTargetFromProps(props, key) {\n      return props[key];\n    }\n  }, {\n    key: \"readValueFromInstance\",\n    value: function readValueFromInstance(instance, key) {\n      if (transformProps.has(key)) {\n        var defaultType = getDefaultValueType(key);\n        return defaultType ? defaultType.default || 0 : 0;\n      }\n\n      key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n      return instance.getAttribute(key);\n    }\n  }, {\n    key: \"measureInstanceViewportBox\",\n    value: function measureInstanceViewportBox() {\n      return createBox();\n    }\n  }, {\n    key: \"scrapeMotionValuesFromProps\",\n    value: function scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n      return _scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n  }, {\n    key: \"build\",\n    value: function build(renderState, latestValues, options, props) {\n      buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n  }, {\n    key: \"renderInstance\",\n    value: function renderInstance(instance, renderState, styleProp, projection) {\n      renderSVG(instance, renderState, styleProp, projection);\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(instance) {\n      this.isSVGTag = isSVGTag(instance.tagName);\n\n      _get(_getPrototypeOf(SVGVisualElement.prototype), \"mount\", this).call(this, instance);\n    }\n  }]);\n\n  return SVGVisualElement;\n}(DOMVisualElement);\n\nexport { SVGVisualElement };","map":null,"metadata":{},"sourceType":"module"}